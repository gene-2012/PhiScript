#undef FIELD_METHOD
#define FIELD_METHOD(name) addMethod(#name, Method{name});
#undef FIELD_PROPERTY
#define FIELD_PROPERTY(name, value) setProperty(#name, value);
#ifndef MESSAGE_HEADER
#define MESSAGE_HEADER ERROR
#endif
#ifndef MESSAGE_HEADER_L
#define MESSAGE_HEADER_L error
#endif
#ifndef MESSAGE_BODY
#define MESSAGE_BODY error
#endif
#define CHECK(n)          \
    if (args.size() != n) \
    throw RuntimeException("Unmatched parameter count, expected " #n ".")
#define CHECK_LEAST(n)   \
    if (args.size() < n) \
    throw RuntimeException("Unmatched parameter count, expected at least" #n ".")
#define CHECK_LEAST_AND_MOST(mi, ma)   \
    if (args.size() < mi || args.size() > ma) \
    throw RuntimeException("Unmatched parameter count, expected at least " #mi " and at most " #ma ".")

namespace phi
{
    namespace builtin
    {
        MESSAGE_HEADER MESSAGE_HEADER_L;
    }
}

phi::builtin::MESSAGE_HEADER::MESSAGE_HEADER()
{
    MESSAGE_BODY
}